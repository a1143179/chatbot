name: Deploy to Azure Functions

on:
  pull_request_target:
    types: [closed]
    branches: [ main, working ]
    paths:
      - 'api/**'
      - '.github/workflows/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    timeout-minutes: 45
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
    
    - name: Install dependencies
      run: |
        cd api
        npm ci --no-audit
      timeout-minutes: 15
    
    - name: Run unit tests
      run: |
        cd api
        npm test
      timeout-minutes: 10
    
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
      timeout-minutes: 15
    
    - name: Install Azure Functions Core Tools
      run: |
        npm install -g azure-functions-core-tools@4 --unsafe-perm true
    
    - name: Prepare deployment package
      run: |
        cd api
        # Create a clean deployment directory
        rm -rf deployment
        mkdir -p deployment
        
        # Copy only necessary files
        cp -r health deployment/
        cp -r process deployment/
        cp host.json deployment/
        cp package.json deployment/
        
        # Show deployment structure
        echo "Deployment package structure:"
        ls -la deployment/
        ls -la deployment/health/
        ls -la deployment/process/
      timeout-minutes: 10
    
    - name: Deploy to Azure Functions
      run: |
        cd api/deployment
        # Deploy without remote build to avoid timeout
        func azure functionapp publish chatbotprocessor --javascript --force
      timeout-minutes: 25
        
    - name: Restart Function App
      run: |
        # Restart the function app to ensure new files are loaded
        az functionapp restart --name chatbotprocessor --resource-group ResourceGroup1
      timeout-minutes: 10 
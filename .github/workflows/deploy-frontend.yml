name: Deploy Frontend to GitHub Pages

on:
  push:
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
  pull_request_target:
    types: [closed]
    branches: [ main, working ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      pull-requests: read
    
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Check for existing PR
        run: |
          # Get the current branch name
          BRANCH_NAME="working"
          
          # Check if a PR already exists for this branch
          PR_EXISTS=$(gh pr list --head "$BRANCH_NAME" --json number --jq 'length')
          
          echo "pr_exists=$PR_EXISTS" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          if [ "$PR_EXISTS" -eq 0 ]; then
            echo "No PR exists for branch $BRANCH_NAME"
          else
            echo "PR already exists for branch $BRANCH_NAME"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test

  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    permissions:
      contents: write
      pull-requests: read
    
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Check for existing PR
        run: |
          # Get the current branch name
          BRANCH_NAME="working"
          
          # Check if a PR already exists for this branch
          PR_EXISTS=$(gh pr list --head "$BRANCH_NAME" --json number --jq 'length')
          
          echo "pr_exists=$PR_EXISTS" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          if [ "$PR_EXISTS" -eq 0 ]; then
            echo "No PR exists for branch $BRANCH_NAME"
          else
            echo "PR already exists for branch $BRANCH_NAME"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run tests
        run: npm run test

      - name: Build React app
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages 